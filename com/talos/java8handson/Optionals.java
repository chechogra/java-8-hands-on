import java.util.NoSuchElementException;
import java.util.Optional;

public class Optionals {

    public static void main(String[] args) {
        //checking nullable optional String with a null value
        Optionals.printName(null);
        //checking nullable optional String with a String
        Optionals.printName("Talos Digital");


        //Checking optional that doesn't accept null values.
        Optional<String> gender = Optional.of("MALE");
        String answer1 = "Yes";
        String answer2 = null;
        System.out.println("\n\n\nCheck ofNullable in optionals: \n");
        System.out.println("Non-Empty Optional:" + gender);
        System.out.println("Non-Empty Optional: Gender value : " + gender.get());
        System.out.println("Empty Optional: " + Optional.empty());
        System.out.println("ofNullable on Non-Empty Optional: " + Optional.ofNullable(answer1));
        System.out.println("ofNullable on Empty Optional: " + Optional.ofNullable(answer2));

        //trying a null value on a non-nullable optional throws a java.lang.NullPointerException
        try {
            System.out.println("ofNullable on Non-Empty Optional: " + Optional.of(answer2));
        } catch (NullPointerException e) {
            System.out.println("\nNull pointer exception generated by 'Optional.of(answer2)'");
        }


        //Using filters on optionals
        Optional<String> name = Optional.of("Pedro");
        Optional<String> emptyName = Optional.empty();
        System.out.println("\n\n\nFilter on optional: \n");
        System.out.println(name.filter(g -> g.equals("pedro"))); //Optional.empty
        System.out.println(name.filter(g -> g.equalsIgnoreCase("PEDRO"))); //Optional[PEDRO]
        System.out.println(emptyName.filter(g -> g.equalsIgnoreCase("PEDRO"))); //Optional.empty


        //Use of non-nullable optionals, check if the value is present and get it, else use a default value
        System.out.println("\n\n\nCheck isPresent, ifPresent: \n");
        Optional<String> optional = Optional.of("bam");
        optional.isPresent();           // true
        optional.get();                 // "bam"
        optional.orElse("fallback");    // "bam"

        //Use the ifPresent as a conditional, print the first character of the optional.
        optional.ifPresent((s) -> System.out.println(s.charAt(0) + "\n"));     // "b"


        //Example of Nullable optional without asking if the value is present.
        String notNullString = "This Passes";
        try {
            Optional emptyOptional = Optional.ofNullable(notNullString);
            System.out.println(emptyOptional.get()); // can get the element because is not null.
        } catch (NoSuchElementException ex) {
            System.out.println("expected NoSuchElementException");
        }
        String nullString = null;
        try {
            Optional emptyOptional = Optional.ofNullable(nullString);
            System.out.println(emptyOptional.get()); // can't get the element because it's null
        } catch (NoSuchElementException ex) {
            System.out.println("expected NoSuchElementException"); //this is executed
        }

    }

    //A method to try Nullable optionals.
    static void printName(String name) {
        Optional<String> fullName = Optional.ofNullable(name);
        System.out.println("\n\nCheck if name is set and print it, if not, call it 'Stranger': \n");
        System.out.println("Full Name is set? " + fullName.isPresent());
        System.out.println("Full Name: " + fullName.orElse( "[none]"));
        System.out.println(fullName.map(s -> "Hey " + s + "!").orElse("Hey Stranger!"));
    }
}
